{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 let poolBase64 = null;\
let idMap = null;\
\
Office.onReady(async () => \{\
  log("Lade Assets ...");\
  try \{\
    const [pptxB64, mapJson] = await Promise.all([\
      fetch("assets/timer_pool_15min.b64.txt").then(r => r.text()),\
      fetch("assets/timer_pool_900sec.map.json").then(r => r.json())\
    ]);\
    poolBase64 = pptxB64.trim();\
    idMap = mapJson;\
    log("Assets bereit.");\
  \} catch (e) \{\
    log("Fehler beim Laden der Assets: " + e);\
  \}\
\
  document.querySelectorAll(".presets button").forEach(btn => \{\
    btn.addEventListener("click", () => insertTimer(parseInt(btn.dataset.sec, 10)));\
  \});\
  document.getElementById("insert").addEventListener("click", () => \{\
    const secs = clamp(parseInt(document.getElementById("customSec").value, 10) || 60, 5, 900);\
    insertTimer(secs);\
  \});\
\});\
\
function clamp(n, a, b) \{ return Math.min(Math.max(n, a), b); \}\
function log(msg) \{ document.getElementById("log").textContent = msg; \}\
\
async function getTargetSlideIdHash() \{\
  return new OfficeExtension.Promise((resolve, reject) => \{\
    Office.context.document.getSelectedDataAsync(Office.CoercionType.SlideRange, (res) => \{\
      if (res.status !== Office.AsyncResultStatus.Succeeded) return reject(res.error || "Keine Folie selektiert?");\
      resolve(res.value.slides[0].id + "#");\
    \});\
  \});\
\}\
\
function buildSourceIds(seconds) \{\
  const ids = [];\
  for (let s = seconds; s >= 1; s--) \{\
    const id = idMap[String(s)];\
    if (!id) throw new Error("ID nicht gefunden f\'fcr Sekunde " + s);\
    ids.push(id);\
  \}\
  return ids;\
\}\
\
async function insertTimer(seconds) \{\
  if (!poolBase64 || !idMap) \{ log("Assets noch nicht geladen."); return; \}\
  try \{\
    const targetHash = await getTargetSlideIdHash();\
    await PowerPoint.run(async (ctx) => \{\
      ctx.presentation.insertSlidesFromBase64(poolBase64, \{\
        formatting: "UseDestinationTheme",\
        targetSlideId: targetHash,\
        sourceSlideIds: buildSourceIds(seconds)\
      \});\
      await ctx.sync();\
    \});\
    log(`Timer ($\{seconds\}s) eingef\'fcgt.`);\
  \} catch (e) \{\
    log("Fehler beim Einf\'fcgen: " + (e.message || e));\
  \}\
\}\
}